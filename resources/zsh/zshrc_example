# #ssh-agent w/ quiet
# zstyle :omz:plugins:ssh-agent agent-forwarding yes
# zstyle :omz:plugins:ssh-agent identities   ~/.ssh/kali-ssh
# zstyle :omz:plugins:ssh-agent quiet yes

# Path to your oh-my-zsh installation.
export ZSH="/home/ubuntu/.oh-my-zsh"

#New History file location allows us to back it up to github
HISTFILE="$HOME/.bounty_history"
HISTSIZE=1000
SAVEHIST=2000
HISTSTAMPS="mm/dd/yyyy"
setopt EXTENDED_HISTORY
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_REDUCE_BLANKS
setopt HIST_SAVE_NO_DUPS
setopt INC_APPEND_HISTORY_TIME
alias backup='cp -r ~/.logs ~/.config/hist'


#history log function
    precmd() { eval 'if [ "$(id -u)" -ne 0 ]; then echo "$(date "+%Y-%m-%d.%H:%M:%S") $(pwd) $(history -f)" >> ~/.logs/zsh-history-$(date "+%Y-%m-%d").log; fi' }


#zsh theme
ZSH_THEME="ka-tet"


zstyle ':omz:update' mode auto      # update automatically without asking

plugins=(
aws
colored-man-pages
colorize
git
history
jsontools
ssh-agent
themes
tmux
web-search
zsh-autosuggestions
zsh-syntax-highlighting
)

source $ZSH/oh-my-zsh.sh

bindkey -v

# Preferred editor for local and remote sessions
 if [[ -n $SSH_CONNECTION ]]; then
   export EDITOR='vim'
 else
   export EDITOR='vim'
 fi

# zsh-autosuggestions settings.
ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20

#daily drivers
alias t='tmux new -f ~/.tmux.conf -s $1'
alias i='sudo apt-get install'
alias upgrade='sudo apt-get upgrade -y'
alias public='curl wtfismyip.com/text'
alias publicinfo='curl wtfismyip.com/json'
alias py='python3'

#docker function
function dockershellhere() {
    dirname=${PWD##*/}
    mkdir .bounty-logs && docker run --rm -it --entrypoint=/bin/bash -v `pwd`:/${dirname} -w /${dirname} debian:latest
}

#docker kali function
function bounty() {
	dirname=${PWD##*/}
	if [ ! -d `pwd`/.bounty-logs ];
	then
   	mkdir .bounty-logs \
   	&& docker run --name $NAME --rm -it \
   	--net=host --entrypoint=/bin/zsh \
		--cap-add=NET_ADMIN \
   	-v $HOME/.Xauthority:/root/.Xauthority:ro -v /tmp/.X11-unix:/tmp/.X11-unix \
    -e DISPLAY=$DISPLAY \
		-e DOMAIN=$DOMAIN \
		-e NAME=$NAME \
		-e TARGET=$TARGET \
		-e IP=$IP \
   	-v `pwd`/.bounty-logs:/root/.logs:rw -v `pwd`:/${dirname} \
   	-w /${dirname} fonalex45/bounty:latest
	else
		docker run --name $NAME --rm -it \
		--net=host --entrypoint=/bin/zsh \
		--cap-add=NET_ADMIN \
		-v $HOME/.Xauthority:/root/.Xauthority:ro -v /tmp/.X11-unix:/tmp/.X11-unix \
		-e DOMAIN=$DOMAIN \
    -e DISPLAY=$DISPLAY \
		-e NAME=$NAME \
		-e TARGET=$TARGET \
		-e IP=$IP \
		-v `pwd`/.bounty-logs:/root/.logs:rw -v `pwd`:/${dirname} \
		-w /${dirname} fonalex45/bounty:latest
	fi
}

function enter-bounty() {
	docker exec -it $NAME /bin/zsh
}

function stop-bounty() {
	docker container stop $NAME
}

function destroy-bounty() {
	docker container rm $NAME
}

export GOPATH=/usr/local/bin/go
